import{c as d,z as o,o as c}from"./index-BEdaz8LM.js";const r={class:"markdown-body"},s={__name:"040Constraint",setup(h,{expose:e}){return e({frontmatter:{}}),(a,t)=>(c(),d("div",r,t[0]||(t[0]=[o("<h1>Constraint</h1><p>约束（Constraint）用于定义由 <code>combine</code> 或 <code>intersect</code> 操作生成的 <code>Glyph</code> 中，参与运算的图形对象（<code>GraphicObject</code>）之间的相对位置、尺寸或旋转关系。通过约束，可以实现图形之间的对齐、连接、等值或旋转等操作。以下是四种约束的详细说明：</p><h2>Glyph.connect(source, target, {sourceAnchor?, targetAnchor?, anchor?, offset?})</h2><p><code>connect</code> 用于将一个图形对象（<code>source</code>）连接到另一个图形对象（<code>target</code>）上。连接的位置由 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 确定的锚点决定，并可以通过 <code>offset</code> 进行偏移。</p><h3>Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>source</td><td>GraphicObject</td><td>源图形对象，即需要被连接的图形。</td></tr><tr><td>target</td><td>GraphicObject</td><td>目标图形对象，即连接的目标图形。</td></tr><tr><td>sourceAnchor?</td><td>[number, number] | [string, string]</td><td>源图形对象的锚点位置。默认为 <code>[0.5, 0.5]</code>（中心点）。</td></tr><tr><td>targetAnchor?</td><td>[number, number] | [string, string]</td><td>目标图形对象的锚点位置。默认为 <code>[0.5, 0.5]</code>（中心点）。</td></tr><tr><td>anchor?</td><td>[number, number] | [string, string]</td><td>如果提供，则同时作为 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 的值。</td></tr><tr><td>offset?</td><td>[number, number]</td><td>连接后的偏移量。默认为 <code>[0, 0]</code>。</td></tr></tbody></table><h3>Returns</h3><p>返回 <code>this</code>，支持链式调用。</p><h3>Anchor 参数说明</h3><ul><li><code>sourceAnchor</code> 和 <code>targetAnchor</code> 分别用于指定源图形和目标图形的锚点位置。</li><li>如果提供了 <code>anchor</code> 参数，则 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 都会被设置为 <code>anchor</code> 的值。</li><li>锚点可以是数值（如 <code>0.5</code> 表示中心点）或字符串（如 <code>&quot;left&quot;</code>、<code>&quot;right&quot;</code>、<code>&quot;top&quot;</code>、<code>&quot;bottom&quot;</code>）。</li><li>左下角的锚点为 <code>[0, 0]</code>，右上角的锚点为 <code>[1, 1]</code></li></ul><h2>Glyph.align(source, target, direction, {sourceAnchor?, targetAnchor?, anchor?, offset?})</h2><p><code>align</code> 用于将一个图形对象（<code>source</code>）沿着指定方向（<code>direction</code>）与另一个图形对象（<code>target</code>）对齐。对齐的参考线由 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 确定，并可以通过 <code>offset</code> 进行偏移。</p><h3>Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>source</td><td>GraphicObject</td><td>源图形对象，即需要对齐的图形。</td></tr><tr><td>target</td><td>GraphicObject</td><td>目标图形对象，即对齐的目标图形。</td></tr><tr><td>direction?</td><td>string</td><td>对齐方向，可选值为 <code>&quot;x&quot;</code>（水平方向）或 <code>&quot;y&quot;</code>（垂直方向）。默认为 <code>&quot;x&quot;</code>。</td></tr><tr><td>sourceAnchor?</td><td>number | string</td><td>源图形对象的参考线位置。默认为 <code>0.5</code>（中心点）。</td></tr><tr><td>targetAnchor?</td><td>number | string</td><td>目标图形对象的参考线位置。默认为 <code>0.5</code>（中心点）。</td></tr><tr><td>anchor?</td><td>number | string</td><td>如果提供，则同时作为 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 的值。</td></tr><tr><td>offset?</td><td>number</td><td>对齐后的偏移量。默认为 <code>0</code>。</td></tr></tbody></table><h3>Returns</h3><p>返回 <code>this</code>，支持链式调用。</p><h3>Anchor 参数说明</h3><ul><li><code>sourceAnchor</code> 和 <code>targetAnchor</code> 分别用于指定源图形和目标图形的参考线位置。</li><li>如果提供了 <code>anchor</code> 参数，则 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 都会被设置为 <code>anchor</code> 的值。</li><li>参考线可以是数值（如 <code>0.5</code> 表示中心点）或字符串（如 <code>&quot;left&quot;</code>、<code>&quot;right&quot;</code>、<code>&quot;top&quot;</code>、<code>&quot;bottom&quot;</code>）。</li><li><code>0</code> 代表底部或左侧，<code>1</code> 代表顶部或右侧</li></ul><h2>Glyph.equal(source, target, {sourceChannel?, targetChannel?, channel?})</h2><p><code>equal</code> 用于将一个图形对象（<code>source</code>）的某个属性（<code>sourceChannel</code>）设置为与另一个图形对象（<code>target</code>）的某个属性（<code>targetChannel</code>）相等。</p><h3>Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>source</td><td>GraphicObject</td><td>源图形对象，即需要设置属性的图形。</td></tr><tr><td>target</td><td>GraphicObject</td><td>目标图形对象，即属性参考的目标图形。</td></tr><tr><td>sourceChannel?</td><td>string</td><td>源图形对象的属性名称（如 <code>&quot;width&quot;</code>、<code>&quot;height&quot;</code>）。</td></tr><tr><td>targetChannel?</td><td>string</td><td>目标图形对象的属性名称（如 <code>&quot;width&quot;</code>、<code>&quot;height&quot;</code>）。</td></tr><tr><td>channel?</td><td>string</td><td>如果提供，则同时作为 <code>sourceChannel</code> 和 <code>targetChannel</code> 的值。</td></tr></tbody></table><h3>Returns</h3><p>返回 <code>this</code>，支持链式调用。</p><h3>Channel 参数说明</h3><ul><li><code>sourceChannel</code> 和 <code>targetChannel</code> 分别用于指定源图形和目标图形的属性名称。</li><li>如果提供了 <code>channel</code> 参数，则 <code>sourceChannel</code> 和 <code>targetChannel</code> 都会被设置为 <code>channel</code> 的值。</li></ul><h2>Glyph.rotate(source, target, offset?)</h2><p><code>rotate</code> 用于将一个图形对象（<code>source</code>）旋转到与另一个图形对象（<code>target</code>）相同的角度，并可以额外增加一个偏移角度（<code>offset</code>）。旋转以角度为单位，顺时针方向为正方向。</p><h3>Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>source</td><td>GraphicObject</td><td>源图形对象，即需要旋转的图形。</td></tr><tr><td>target</td><td>GraphicObject</td><td>目标图形对象，即旋转参考的目标图形。</td></tr><tr><td>offset?</td><td>number</td><td>旋转后的偏移角度（以角度为单位，顺时针为正方向）。默认为 <code>0</code>。</td></tr></tbody></table><h3>Returns</h3><p>返回 <code>this</code>，支持链式调用。</p>",32)])))}};export{s as default};
