import{c as e,z as o,o as c}from"./index-CMeSIyLD.js";const r={class:"markdown-body"},a={__name:"010Graphic Objects",setup(i,{expose:d}){return d({frontmatter:{}}),(l,t)=>(c(),e("div",r,t[0]||(t[0]=[o(`<h1>Graphic Objects</h1><p>Graphic Object 是表示图形的对象。 Graphic Object 可以：</p><ul><li>被手动创建</li><li>被 operator 操作，来创造新的 Graphic Object</li><li>设置 visual channel 和 data field 之间的关系，也就是 encoding</li><li>设置 constraint，定义 Graphic Object 之间的相对位置和尺寸关系</li><li>设置 layout，从而批量控制若干 Graphic Object 的布局</li><li>添加 effect，实现一些装饰性效果</li><li>最后，Graphic Object 可以和数据绑定，输出为图像</li></ul><p>尽管 Glyph 和 Collection 也是 Graphic Object，但它们不能被主动创建，只能依靠 operator 产生，因此不在该章节中。Glyph 详情参考 Constraint 一章，而 Collection 详情参考 Layout 一章</p><h2>class Picture</h2><p><code>Picture</code> 表示图片对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x?, y?, width?, height?, url?, opacity?, color?, colorMode?, keepRatio?})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x?</td><td>number</td><td>图片左下角的 x 坐标。默认为<code>0</code></td></tr><tr><td>y?</td><td>number</td><td>图片左下角的 y 坐标。默认为<code>0</code></td></tr><tr><td>width?</td><td>number</td><td>图片宽度。默认为图片原始宽度</td></tr><tr><td>height?</td><td>number</td><td>图片高度。默认为图片原始高度</td></tr><tr><td>url?</td><td>number</td><td>图片的url。</td></tr><tr><td>opacity?</td><td>number</td><td>图片的不透明度。默认为 <code>1</code></td></tr><tr><td>color?</td><td>number</td><td>图片被重新上色的颜色。默认为 <code>undefined</code>，也就是不进行重新上色</td></tr><tr><td>colorMode?</td><td>number</td><td>图片被重新上色的方式。默认为 <code>&quot;hue&quot;</code></td></tr></tbody></table><p>其中，colorMode的可选项包括</p><ul><li><code>&quot;hue&quot;</code>: 重新上色时只改变图片的色相，保留饱和度和明度</li><li><code>&quot;darkness&quot;</code>: 重新上色时按照暗度进行颜色映射，暗度从0到1将映射为白色到目标颜色</li></ul><h2>class Rect</h2><p><code>Rect</code> 表示矩形对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x?, y?, width?, height?, …style})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x?</td><td>number</td><td>矩形左下角的 x 坐标。默认为<code>0</code></td></tr><tr><td>y?</td><td>number</td><td>矩形左下角的 y 坐标。默认为<code>0</code></td></tr><tr><td>width?</td><td>number</td><td>矩形的宽度。默认为<code>100</code></td></tr><tr><td>height?</td><td>number</td><td>矩形的高度。默认为<code>100</code></td></tr><tr><td>…style</td><td>Style</td><td>矩形的样式属性，如填充色、边框等</td></tr></tbody></table><p>此处 style 为对象展开写法，可以直接在矩形的构造函数中定义 style 的具体参数，例如</p><pre><code class="language-javascript">const rect = new Rect({x = 0, y = 0, fill = &quot;red&quot;, strokeWidth = 2})
// 此处 fill 和 strokeWidth 可以直接在矩形的构造函数里设置
</code></pre><h2>class Circle</h2><p><code>Circle</code> 表示圆形对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x?, y?, r?, innerRadius?, …style})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x?</td><td>number</td><td>圆心的 x 坐标。默认为<code>0</code></td></tr><tr><td>y?</td><td>number</td><td>圆心的 y 坐标。默认为<code>0</code></td></tr><tr><td>r?</td><td>number</td><td>圆的半径。默认为<code>50</code></td></tr><tr><td>innerRadius?</td><td>number</td><td>圆的内半径（用于绘制圆环）。默认为<code>0</code></td></tr><tr><td>…style</td><td>Style</td><td>圆的样式属性，如填充色、边框等</td></tr></tbody></table><h2>class Point</h2><p><code>Point</code> 表示点对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x?, y?, size?, shape?, …style})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x?</td><td>number</td><td>点的 x 坐标。默认为<code>0</code></td></tr><tr><td>y?</td><td>number</td><td>点的 y 坐标。默认为<code>0</code></td></tr><tr><td>size?</td><td>number</td><td>点的大小。默认为<code>2</code></td></tr><tr><td>shape?</td><td>string</td><td>点的形状。默认为<code>&quot;circle&quot;</code></td></tr><tr><td>…style</td><td>Style</td><td>点的样式属性，如填充色、边框等</td></tr></tbody></table><h2>class Line</h2><p><code>Line</code> 表示线段对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x1?, y1?, x2?, y2?, …style})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x1?</td><td>number</td><td>线段起点的 x 坐标。默认为<code>0</code></td></tr><tr><td>y1?</td><td>number</td><td>线段起点的 y 坐标。默认为<code>0</code></td></tr><tr><td>x2?</td><td>number</td><td>线段终点的 x 坐标。默认为<code>100</code></td></tr><tr><td>y2?</td><td>number</td><td>线段终点的 y 坐标。默认为<code>100</code></td></tr><tr><td>…style</td><td>Style</td><td>线段的样式属性，如颜色、宽度等</td></tr></tbody></table><h2>class Text</h2><p><code>Text</code> 表示文本对象，继承自 <code>GraphicObject</code></p><h3>constructor ({x?, y?, content?, …style})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>x?</td><td>number</td><td>文本左下角的 x 坐标。默认为<code>0</code></td></tr><tr><td>y?</td><td>number</td><td>文本左下角的 y 坐标。默认为<code>0</code></td></tr><tr><td>content?</td><td>string</td><td>文本内容。默认为空字符串<code>&quot;&quot;</code></td></tr><tr><td>…style</td><td>TextStyle</td><td>文本的样式属性，如字体、颜色等</td></tr></tbody></table><h2>class Axis</h2><p><code>Axis</code> 表示坐标轴对象，继承自 <code>GraphicObject</code></p><h3>constructor (orientation, {tickPosition?, tickLength?, labelOffset?, fontSize?, position?, color?, showBaseline?, showTickLine?, showTickLabel?, numberTicks?, scale?})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>orientation</td><td>string</td><td>坐标轴的方向，可选值为<code>&quot;x&quot;</code>、<code>&quot;y&quot;</code>、<code>&quot;-x&quot;</code>、<code>&quot;-y&quot;</code></td></tr><tr><td>tickPosition?</td><td>string</td><td>刻度线的位置，可选值为<code>&quot;left&quot;</code>、<code>&quot;right&quot;</code>、<code>&quot;top&quot;</code>、<code>&quot;bottom&quot;</code>。默认为<code>&quot;left&quot;</code></td></tr><tr><td>tickLength?</td><td>number</td><td>刻度线的长度。默认为<code>5</code></td></tr><tr><td>labelOffset?</td><td>number</td><td>刻度标签与刻度线的偏移量。默认为<code>10</code></td></tr><tr><td>fontSize?</td><td>number</td><td>刻度标签的字体大小。默认为<code>16</code></td></tr><tr><td>position?</td><td>number</td><td>坐标轴的位置。默认为<code>0</code></td></tr><tr><td>color?</td><td>string</td><td>坐标轴的颜色。默认为<code>&quot;#000&quot;</code></td></tr><tr><td>showBaseline?</td><td>boolean</td><td>是否显示基线。默认为<code>true</code></td></tr><tr><td>showTickLine?</td><td>boolean</td><td>是否显示刻度线。默认为<code>true</code></td></tr><tr><td>showTickLabel?</td><td>boolean</td><td>是否显示刻度标签。默认为<code>true</code></td></tr><tr><td>numberTicks?</td><td>number</td><td>刻度的数量。默认为<code>5</code></td></tr><tr><td>scale?</td><td>Scale</td><td>坐标轴对应的 scale</td></tr></tbody></table><h3>Orientation 参数说明</h3><ul><li><code>orientation</code> 用于指定坐标轴的方向： <ul><li><code>&quot;x&quot;</code>：水平轴，从左到右。</li><li><code>&quot;y&quot;</code>：垂直轴，从下到上。</li><li><code>&quot;-x&quot;</code>：反向水平轴，从右到左。</li><li><code>&quot;-y&quot;</code>：反向垂直轴，从上到下。</li></ul></li></ul><hr><h3>TickPosition 参数说明</h3><ul><li><code>tickPosition</code> 用于指定刻度线的位置： <ul><li>对于水平轴（<code>&quot;x&quot;</code> 或 <code>&quot;-x&quot;</code>），可选值为 <code>&quot;top&quot;</code> 或 <code>&quot;bottom&quot;</code>。</li><li>对于垂直轴（<code>&quot;y&quot;</code> 或 <code>&quot;-y&quot;</code>），可选值为 <code>&quot;left&quot;</code> 或 <code>&quot;right&quot;</code>。</li></ul></li></ul>`,41)])))}};export{a as default};
